{
  "name": "Redundancy: Zone",
  "hypothesis": "This hypothesis will vary depending on your service and its use cases.",
  "description": "Test your service's availability when a randomly selected zone is unreachable from the other zones. The Gremlin zone tag is required for this test. Estimated test length: 10 minutes.",
  "recommended_scenario_id": "zone-failure",
  "created_from_type": "Recommended",
  "created_from_id": "zone-failure",
  "graph": {
    "nodes": {
      "0": {
        "target_definition": {
          "containerSelection": {
            "selectionType": "ANY"
          },
          "strategy_type": "Random",
          "target_type": "Host",
          "strategy": {
            "percentage": 100,
            "attrs": {
              "multiSelectTags": {
                "zone": [
                  "ap-southeast-2c"
                ]
              }
            },
            "multi_select_tags": {
              "zone": [
                "ap-southeast-2c"
              ]
            },
            "type": "RandomPercent"
          }
        },
        "impact_definition": {
          "infra_command_type": "blackhole",
          "infra_command_args": {
            "hostnames": "^api.gremlin.com",
            "egress_ports": "^53",
            "no_derived_exclusion_rules": false,
            "providers": [],
            "type": "blackhole",
            "length": 120,
            "cli_args": [
              "blackhole",
              "--length",
              "120",
              "-h",
              "^api.gremlin.com",
              "-p",
              "^53"
            ]
          }
        },
        "attack_configuration": {
          "command": {
            "infraCommandType": "blackhole",
            "infraCommandArgs": {
              "hostnames": "^api.gremlin.com",
              "egress_ports": "^53",
              "no_derived_exclusion_rules": false,
              "providers": [],
              "type": "blackhole",
              "length": 120,
              "cli_args": [
                "blackhole",
                "--length",
                "120",
                "-h",
                "^api.gremlin.com",
                "-p",
                "^53"
              ]
            }
          },
          "targets": [
            {
              "targetingStrategy": {
                "type": "Host",
                "multiSelectTags": {
                  "zone": [
                    "ap-southeast-2c"
                  ]
                }
              }
            }
          ],
          "sampling": {
            "type": "Even",
            "percent": 100
          }
        },
        "include_new_targets": true,
        "type": "InfraAttack",
        "id": 0,
        "state": {
          "lifecycle": "NotStarted"
        },
        "guid": "3499af35-3e55-4b2c-99af-353e552b2ce1"
      }
    },
    "start_id": "0",
    "observers": [
      {
        "name": "UnhealthyHosts-AZ2",
        "thirdPartyPresets": "aws",
        "endpointConfiguration": {
          "url": "https://monitoring.ap-southeast-2.amazonaws.com/?Action=DescribeAlarms&AlarmNamePrefix=UnhealthyHosts-AZ2&Version=2010-08-01",
          "method": "GET",
          "headers": {}
        },
        "rawEndpointConfiguration": {
          "url": "https://ap-southeast-2.console.aws.amazon.com/cloudwatch/home?region=ap-southeast-2#alarmsV2:alarm/UnhealthyHosts-AZ2",
          "headers": {}
        },
        "evaluationConfiguration": {
          "okLatencyMaxMs": 5000,
          "okStatusCodes": [
            "200"
          ],
          "responseBodyEvaluation": {
            "op": "AND",
            "predicates": [
              {
                "comparator": "EQU",
                "type": "String",
                "jpQuery": ".DescribeAlarmsResponse.DescribeAlarmsResult.MetricAlarms[0].StateValue",
                "rValue": "OK"
              }
            ]
          }
        },
        "statusCheckId": "75025e24-9d0e-4f8b-825e-249d0e3f8bff",
        "externalIntegrationId": "TYPE~AWS_da1d1ff5528ab4ad21719ddc8f442cb0a79981c4352810c46d63480664bdef46a432d05382ed71dfd657f709ebc1bdb2c3919fc88c89202945e31b9ebbbf3bfc~TEAM~42bee553-3ecf-440b-bee5-533ecfc40bc8~NAME~AWS",
        "isPrivateNetwork": false,
        "isAutoGenerated": false,
        "pollingIntervalSeconds": 30,
        "type": "ContinuousStatusCheck",
        "id": "0",
        "state": {
          "private_network_invocation_completed": false,
          "lifecycle": "NotStarted"
        },
        "guid": "1d06a053-2bd1-430c-8c7b-6b0b2c73445e"
      }
    ]
  }
}